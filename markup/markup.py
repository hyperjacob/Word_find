# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
from telebot.types import KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã
from settings import config
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å-–º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π
from data_base.dbalchemy import DBManager
from emoji import emojize


class Keyboards:
    """
    –ö–ª–∞—Å—Å Keyboards –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Ä–∞–∑–º–µ—Ç–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±–æ—Ç–∞
    """
    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ç–∫–∏

    def __init__(self):
        self.markup = None
        # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
        self.BD = DBManager()

    def set_btn(self, name, step=0, quantity=0, userid=0):
        """
        –°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É –ø–æ –≤—Ö–æ–¥–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
        """
        if name == 'AMOUNT_ORDERS':
            config.KEYBOARD['AMOUNT_ORDERS'] = f"{step + 1} –∏–∑ {str(self.BD.count_rows_order())}"

        if name == 'AMOUNT_PRODUCT':
            config.KEYBOARD['AMOUNT_PRODUCT'] = f"{quantity}"

        if name == 'HARD':
            config.KEYBOARD['HARD'] = emojize(f'üìà –°–ª–æ–∂–Ω–æ—Å—Ç—å {self.BD.show_settings("hard", userid)} –∏–∑ 3')

        return KeyboardButton(config.KEYBOARD[name])


    def start_menu(self):
        '''
        —Å–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é
        '''
        self.markup = ReplyKeyboardMarkup(True, True)
        itm_btn_1 = self.set_btn('PLAY_NOW')
        itm_btn_2 = self.set_btn('INFO')
        itm_btn_3 = self.set_btn('RANK')
        itm_btn_4 = self.set_btn('SETTINGS')
        # —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
        self.markup.row(itm_btn_1)
        self.markup.row(itm_btn_2, itm_btn_3, itm_btn_4)
        return self.markup

    def rank_menu(self):
        '''
        —Å–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é
        '''
        self.markup = ReplyKeyboardMarkup(True, True)
        itm_btn_1 = self.set_btn('SCORE')
        itm_btn_2 = self.set_btn('ABSSCRE')
        itm_btn_3 = self.set_btn('GAMES')
        itm_btn_4 = self.set_btn('<<')
        itm_btn_5 = self.set_btn('YOURSTATS')
        # —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
        self.markup.row(itm_btn_1, itm_btn_3)
        self.markup.row(itm_btn_2, itm_btn_5)
        self.markup.row(itm_btn_4)
        return self.markup

    def info_menu(self):
        '''
        —Å–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é info
        '''
        self.markup = ReplyKeyboardMarkup(True, True)
        itm_btn_1 = self.set_btn('<<')
        # —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
        self.markup.row(itm_btn_1)
        return self.markup

    def settings_menu(self, userid):
        '''
        —Å–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é settings
        '''
        self.markup = ReplyKeyboardMarkup(True, True)

        if self.BD.show_settings("lang", userid) == "RU":
            itm_btn_1 = self.set_btn('LANGRU')
        elif self.BD.show_settings("lang", userid) == "EN":
            itm_btn_1 = self.set_btn('LANGEN')
        else:
            itm_btn_1 = self.set_btn('X')
        itm_btn_2 = self.set_btn('HARD', userid=userid)
        itm_btn_3 = self.set_btn('CHANGE_NAME')
        itm_btn_4 = self.set_btn('<<')
        # —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
        self.markup.row(itm_btn_1, itm_btn_2)
        self.markup.row(itm_btn_3, itm_btn_4)
        return self.markup

    def remove_menu(self):
        '''
        —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é
        '''

        return ReplyKeyboardRemove()

    def game_menu(self):
        '''
        —Å–æ–∑–¥–∞–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –∏–≥—Ä—ã
        '''
        self.markup = ReplyKeyboardMarkup(True, True)
        self.markup.add(self.set_btn('RELOAD'))
        self.markup.row(self.set_btn('END_GAME'), self.set_btn('TIPS'))
        # —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
        return self.markup

    def set_inline_btn(self, name, hard):
        '''
        :param name: –∏–º—è –∫–Ω–æ–ø–∫–∏
        :return: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫—É
        '''

        return InlineKeyboardButton(str(name),
                                    callback_data=str(hard))


    def set_select_diff(self, hard):
        '''
        –°–æ–∑–¥–∞–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫
        :param hard: —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        :return: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
        '''
        self.markup = InlineKeyboardMarkup(row_width=1)
        '''
        –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π —Ç–æ–≤–∞—Ä–∞
        '''
        for i in range(1, 4):
            if i == hard:
                self.markup.add(self.set_inline_btn(emojize(f":radio_button:–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ {i}"), i))
            else:
                self.markup.add(self.set_inline_btn(emojize(f":white_circle:–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ {i}"), i))

        return self.markup


